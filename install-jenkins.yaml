---
- name: Install Jenkins
  hosts: jenkins
  become: True
  become_user: root
  become_method: sudo
  tasks:
  - name: install Java
    yum: name=java-1.8.0-openjdk-devel state=present

  - name: get Jenkins repository
    get_url: url=http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo dest=/etc/yum.repos.d/jenkins.repo

  - name: add Jenkins repo to system
    shell: rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key

  - name: install Jenkins
    yum: name=jenkins state=present

  - name: add /jenkins to base url for apache reverse proxy
    lineinfile:
      path: /etc/sysconfig/jenkins
      line: JENKINS_ARGS="--prefix=/jenkins"
  

    

  - name: enable Jenkins
    service: name=jenkins state=started enabled=yes

  - name: ensure firewalld is running
    service: name=firewalld state=started

  - name: insert firewalld rule for Jenkins http port
    firewalld: port=8080/tcp permanent=true state=enabled immediate=yes

  - name: install git
    yum: name=git state=present

  - name: Wait 300 seconds for port 8080 to become open on the host
    uri:
      url: "http://127.0.0.1:8080/jenkins/login"
      status_code: 200
    register: result
    until: result.status == 200
    retries: 60
    delay: 1
 

  - name: install Jenkins CLI
    get_url: url=http://localhost:8080/jenkins/jnlpJars/jenkins-cli.jar dest=.

  - name: Login to Jenkins using base password
    shell: java -jar jenkins-cli.jar -s http://localhost:8080/jenkins who-am-i --username admin --password `sudo cat /var/lib/jenkins/secrets/initialAdminPassword`

  # - name: put jenkins ssh key into Jenkins server
  #   copy:
  #     src: .ssh
  #     dest: /var/lib/jenkins/

  # - name: Change permissions of .ssh directory
  #   shell: sudo chmod 644 /var/lib/jenkins/.ssh/id_rsa.pub ; sudo chmod 600 /var/lib/jenkins/.ssh/id_rsa

 

  - name: copy config.xml
    copy:
      src: config.xml
      dest: /tmp/config.xml
      owner: jenkins

  - name: create jenkins admin user
    shell: >
      echo 'jenkins.model.Jenkins.instance.securityRealm.createAccount("jenkins", "jenkins")'
      | java -jar ./jenkins-cli.jar -s http://localhost:8080/jenkins -auth admin:`sudo cat /var/lib/jenkins/secrets/initialAdminPassword` -noKeyAuth groovy = â€“

  - name: Download Jenkins base plugins
    shell: java -jar jenkins-cli.jar -s http://localhost:8080/jenkins -auth jenkins:jenkins install-plugin {{item}}
    with_items:
      - cloudbees-folder
      - mailer
      - google-login
      - icon-shim
      - matrix-auth
      - junit
      - antisamy-markup-formatter
      - pam-auth
      - script-security
      - matrix-project
      - windows-slaves
      - ldap
      - token-macro
      - external-monitor-job
      - build-timeout
      - credentials
      - structs
      - workflow-step-api
      - plain-credentials
      - credentials-binding
      - timestamper
      - ws-cleanup
      - ant
      - gradle
      - jquery-detached
      - workflow-api
      - workflow-support
      - workflow-job
      - pipeline-rest-api
      - handlebars
      - momentjs
      - pipeline-stage-view
      - pipeline-build-step
      - ace-editor
      - workflow-scm-step
      - scm-api
      - workflow-cps
      - ssh-credentials
      - git-client
      - git-server
      - workflow-cps-global-lib
      - branch-api
      - workflow-multibranch
      - durable-task
      - workflow-durable-task-step
      - pipeline-input-step
      - pipeline-stage-step
      - workflow-basic-steps
      - workflow-aggregator
      - github-api
      - git
      - github
      - github-branch-source
      - github-organization-folder
      - mapdb-api
      - subversion
      - ssh-slaves
      - email-ext
      - maven-plugin
      - terraform
      - docker-plugin
  
  - name: Insert/Update HTML surrounded by custom markers after <body> line
    blockinfile:
      path: /var/lib/jenkins/config.xml
      insertbefore: "<quietPeriod>"
      block: "{{ lookup('file', 'jenkins.cloud.conf.j2') }}"

  - name: restart Jenkins
    service: name=jenkins state=restarted


  - name: Wait 300 seconds for port 8080 to become open on the host
    uri:
      url: "http://127.0.0.1:8080/jenkins/login"
      status_code: 200
    register: result
    until: result.status == 200
    retries: 60
    delay: 1


  - name: create Jenkins job from configuration
    shell: java -jar jenkins-cli.jar -s http://localhost:8080/jenkins -auth jenkins:jenkins create-job Project_Pipeline2 < /tmp/config.xml